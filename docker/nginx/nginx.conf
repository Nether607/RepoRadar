user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr '
                    'upstream_response_time: $upstream_response_time '
                    'request_time: $request_time';

    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # Upstream configuration for RepoRadar instances
    upstream reporadar_backend {
        # Load balancing method: least_conn (least connections)
        # Other options: round_robin (default), ip_hash (sticky sessions)
        least_conn;

        # RepoRadar instances
        server reporadar-1:3000 max_fails=3 fail_timeout=30s;
        server reporadar-2:3000 max_fails=3 fail_timeout=30s;
        server reporadar-3:3000 max_fails=3 fail_timeout=30s;

        # Keepalive connections to upstream
        keepalive 32;
    }

    # Health check endpoint (doesn't require load balancing)
    server {
        listen 80;
        server_name _;

        # Health check for load balancer itself
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Proxy all other requests to backend
        location / {
            proxy_pass http://reporadar_backend;
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Keepalive
            proxy_set_header Connection "";

            # Health check integration
            # Nginx will automatically mark upstream servers as down
            # if they fail health checks
        }

        # Backend health check endpoint
        location /health/backend {
            access_log off;
            proxy_pass http://reporadar_backend/health;
            proxy_set_header Host $host;
        }

        # Readiness check endpoint
        location /health/ready {
            access_log off;
            proxy_pass http://reporadar_backend/health/ready;
            proxy_set_header Host $host;
        }

        # Liveness check endpoint
        location /health/live {
            access_log off;
            proxy_pass http://reporadar_backend/health/live;
            proxy_set_header Host $host;
        }

        # Nginx status page (for monitoring)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker network
            deny all;
        }
    }
}
